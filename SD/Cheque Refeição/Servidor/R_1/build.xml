<project name="chequerefeicao-ws-server" default="build" basedir=".">

    <description>
        Standalone Java Web Service build file - contract first

        An Ant project defines targets that execute tasks
        parameterized by properties and paths.

        More information at: http://ant.apache.org/manual/
    </description>

    <!-- properties and paths -->

    <property name="src.dir" location="src" />
    <property name="build.dir" location="build" />
    <property name="build.classes.dir" location="${build.dir}/classes" />
    <property name="build.src.dir" location="${build.dir}/src" />

	<path id="com.mysql.jdbc">
		       <fileset dir="../lib">
		           <include name="mysql*.jar"/>
		       </fileset>
		    </path>


		<path id="project.classpath">
			<!-- compiled classes -->
			<pathelement location="${build.classes.dir}" />
			<path refid="com.mysql.jdbc" />
			<!-- libraries -->
			<fileset dir="../lib">
				<include name="**/*.jar" />
			</fileset>
		</path>


	<property name="ws.name" value="ChequeRefeicao" />
	<property name="uddi.url" value="http://localhost:8081" />
	<property name="ws.url" value="http://localhost:8080/chequerefeicao-ws/endpoint" />
	<property name="wsdl.file" value="${src.dir}/ChequeRefeicao.1_0.wsdl" />
	<makeurl property="wsdl.url" file="${wsdl.file}" />

    <property name="run.mainclass" value="pt.chequerefeicao.ws.impl.ChequeRefeicaoMain"/>
	<property name="run.args" value="${uddi.url} '${ws.name}' ${ws.url}" />


	 <!-- Database properties and paths -->

	    <property name="sql.driver" value="com.mysql.jdbc.Driver"/>

	    <property name="sql.host" value="localhost"/>
	    <property name="sql.port" value="3306"/>
	    <property name="sql.url" value="jdbc:mysql://${sql.host}:${sql.port}" />

	    <property name="sql.admin.user" value="root"/>
	    <property name="sql.admin.pass" value="rootroot"/>

	    <property name="sql.db" value="testdb"/>
	    <property name="sql.db.url" value="${sql.url}/${sql.db}" />

	    <property name="sql.user" value="${sql.db}user"/>
	    <property name="sql.pass" value="${sql.db}pass"/>

	   
	
    <!-- targets -->

    <target name="show"
        description="Show property values" >
        <echo message="ant.project.name = ${ant.project.name}" />
        <echo message="" />
        <echo message="src.dir = ${src.dir}" />
        <echo message="build.dir = ${build.dir}" />
        <echo message="build.classes.dir = ${build.classes.dir}" />
        <echo message="build.src.dir = ${build.classes.dir}" />
        <echo message="" />
        <pathconvert property="project.classpath" refid="project.classpath" />
        <echo message="project.classpath= ${project.classpath}" />
        <echo message="" />
        <echo message="ws.name= ${ws.name}" />
        <echo message="wsdl.url = ${wsdl.url}" />
        <echo message="ws.url = ${ws.url}" />
        <echo message="" />
        <echo message="run.mainclass = ${run.mainclass}" />
        <echo message="run.args = ${run.args}" />
    </target>

	 <target name="db-show" description="Show database property values" >
		        <echo message="sql.driver = ${sql.driver}" />
		        <echo message="sql.url = ${sql.url}" />
		        <echo message="sql.db.url = ${sql.db.url}" />
		        <echo message="" />
		        <pathconvert property="com.mysql.jdbc" refid="com.mysql.jdbc" />
		        <echo message="com.mysql.jdbc (path) = ${com.mysql.jdbc}" />
		        <echo message="" />
		    </target>
	
    <target name="init">
    <!-- description="Create temporary work directories" -->
        <mkdir dir="${build.dir}" />
        <mkdir dir="${build.classes.dir}" />
        <mkdir dir="${build.src.dir}" />
    </target>

    <target name="clean"
        description="Delete temporary work directory">
        <delete dir="${build.dir}" />
    </target>

    <target name="prepare-resources" depends="init">
    <!-- description="Include resource files in compiled program" -->
        <copy todir="${build.classes.dir}" overwrite="true">
            <fileset dir="${src.dir}" excludes="**/*.java" />
        </copy>
        <!--replace dir="${build.classes.dir}" excludes="**/*.class" summary="true">
            <replacefilter token="@example-token@" value="${example-property}" />
        </replace-->
    </target>

    <target name="-wsinit" depends="init">
        <property name="wsdl.local.file" value="${build.src.dir}/${ws.name}.wsdl" />
        <!-- check is wsimport completed successfully -->
        <property name="wsimport.success.file" value="${build.dir}/${ws.name}.wsimport" />
        <available property="wsimport.success" file="${wsimport.success.file}" />
        <!-- wsimport should execute if it did not complete successfully -->
        <condition property="wsimport.flag">
            <not><isset property="wsimport.success" /></not>
        </condition>
    </target>

    <target name="wsimport" depends="-wsinit" if="wsimport.flag"
        description="Generate web service server" >
        <!-- create local copy of WSDL -->
        <get src="${wsdl.url}" dest="${wsdl.local.file}" maxtime="30" retries="1" />
        <!-- generate web service classes using local WSDL -->
        <makeurl property="wsdl.local.url" file="${wsdl.local.file}" />
        <exec executable="wsimport" failonerror="true">
            <!-- assumes that wsimport tool is available in PATH environment property -->
            <arg value="-d" /><arg value="${build.classes.dir}"/>
            <arg value="-s" /><arg value="${build.src.dir}" />
            <arg value="${wsdl.local.url}" />
        </exec>
        <touch file="${wsimport.success.file}" />
    </target>

    <target name="compile" depends="init,prepare-resources,wsimport"
        description="Compile source code" >
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
            includeantruntime="false" debug="true">
            <classpath refid="project.classpath" />
        </javac>
    </target>

    <target name="run" depends="compile"
        description="Run program" >
        <java classname="${run.mainclass}" fork="true" failonerror="true">
            <arg line="${run.args}" />
            <classpath refid="project.classpath" />
        </java>
    </target>

    <import file="script.xml" optional="true" />

    <target name="build" depends="compile"
        description="Build project" />

    <target name="rebuild" depends="clean,build" />
	
	
	 <!-- - - - - - - - - [ M y S Q L   d a t a b a s e ] - - - - - - - - - -->

	    <target name="db-create">
	        <echo message="Creating SQL database '${sql.db.url}'"/>
	        <sql driver="${sql.driver}" url="${sql.url}"
	             userid="${sql.admin.user}" password="${sql.admin.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	            CREATE DATABASE IF NOT EXISTS ${sql.db};

	            USE ${sql.db};

	           CREATE TABLE UTILIZADORES (
	               NAME VARCHAR(20) NOT NULL,
	               PRIMARY KEY (NAME)
	            );
	        	CREATE TABLE CHEQUES (
	        	   TITULAR VARCHAR(20) not null,
					ID INTEGER NOT NULL AUTO_INCREMENT,
	        		SEGREDO VARCHAR(80) NOT NULL,
					VALOR TINYINT NOT NULL,
					USADO BOOLEAN NOT NULL DEFAULT FALSE,
					ENDOSSAVEL BOOLEAN NOT NULL,
					PRIMARY KEY (ID)
	        	);
	            		
	        </sql>
	    </target>

	    <target name="db-drop">
	        <echo message="Dropping SQL database '${sql.db}' @ '${sql.url}'"/>
	        <sql driver="${sql.driver}" url="${sql.url}"
	             userid="${sql.user}" password="${sql.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	            DROP DATABASE IF EXISTS ${sql.db};
	        </sql>
	    </target>

	    <target name="db-populate">
	        <echo message="Populating SQL database '${sql.db.url}'"/>
	        <sql driver="${sql.driver}" url="${sql.db.url}"
	             userid="${sql.user}" password="${sql.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	        	
	        	INSERT INTO UTILIZADORES VALUES ("alice"),
	        		                                       ("bruno"),
	        		                                       ("carlos"),
	        												("zeze"),
	        												("mariazinha"),
	        												("mng"),
	        												("pp"),
	        												("xpto"),
	        												("yez"),
	        												("zleep"),
	        												("bc"),
	        								                ("bf");

	        </sql>
	    </target>

	    <target name="db-dump"
	            description="Print table contents">
	        <echo message="Selecting all tables from '${sql.db.url}'"/>
	        <sql driver="${sql.driver}" url="${sql.db.url}" print="true"
	             userid="${sql.user}" password="${sql.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	        	SELECT * FROM ${sql.db}.UTILIZADORES;
	        	SELECT * FROM ${sql.db}.CHEQUES;

	        </sql>
	    </target>

	    <!-- - - - - - - - - - - [ M y S Q L   u s e r ] - - - - - - - - - - - -->

	    <target name="dbuser-create">
	        <echo message="Creating SQL user '${sql.user}' with password '${sql.pass}'"/>
	        <sql driver="${sql.driver}" url="${sql.url}"
	             userid="${sql.admin.user}" password="${sql.admin.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	            CREATE USER '${sql.user}'@'${sql.host}' IDENTIFIED BY '${sql.pass}';
	        </sql>
	    </target>

	    <target name="dbuser-drop">
	        <echo message="Removes SQL user '${sql.user}'"/>
	        <sql driver="${sql.driver}" url="${sql.url}"
	             userid="${sql.admin.user}" password="${sql.admin.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	            DROP USER '${sql.user}'@'${sql.host}';
	        </sql>
	    </target>

	    <target name="dbuser-grant">
	        <echo message="Grating SQL DB permissions to '${sql.user}'@'${sql.host}' "/>
	        <sql driver="${sql.driver}" url="${sql.url}"
	             userid="${sql.admin.user}" password="${sql.admin.pass}">
	            <classpath refid="com.mysql.jdbc"/>
	            GRANT USAGE
	            ON *.*
	            TO '${sql.user}'@'${sql.host}';

	            GRANT ALL PRIVILEGES
	            ON ${sql.db}.*
	            TO '${sql.user}'@'${sql.host}';
	        </sql>
	    </target>

	    <!-- - - - - - - - - - - [ M y S Q L   m a i n ] - - - - - - - - - - - -->

	    <target name="db-build"
	            depends="dbuser-create,dbuser-grant,db-create,db-populate"
	            description="Build database"/>

	    <target name="db-clean"
	            depends="db-drop,dbuser-drop"
	            description="Clean database"/>

	    <target name="db-rebuild"
	            depends="dbuser-drop,dbuser-create,dbuser-grant,db-drop,db-create,db-populate"
	            description="Rebuild database"/>

</project>
